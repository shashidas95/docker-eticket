version: '3.8'
services:
  # E-ticket Backend
  eticketbe:
    build: ./eticket-be/
    container_name: eticketbe
    ports:
      - "7001:7001"
    networks:
      - ticket
  # E-ticker Frontend
  eticketfe:
    build: ./frontend/
    container_name: eticketfe
    ports:
      - "3000:3000"
    networks:
      - ticket
  #Mongo This is the actual database server that stores and manages the data.
  mongo:
    image: mongo:latest
    container_name: mongo_db
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - ticket
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - ./my-data/db:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
  #Mongo-express This is a web-based administrative user interface for MongoDB
  mongo-express:
    image: mongo-express
    container_name: mexpress
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${DATABASE_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${DATABASE_PASSWORD}
      - ME_CONFIG_MONGODB_URL=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/?authSource=admin
      - ME_CONFIG_BASICAUTH_USERNAME=${ME_CONFIG_BASICAUTH_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${ME_CONFIG_BASICAUTH_PASSWORD}
    networks:
      - ticket
    links:
      - mongo
    restart: unless-stopped
    ports:
      - "8081:8081"
networks:
  ticket:
    driver: bridge